#!/bin/bash --login
########## Define Resources Needed with SBATCH Lines ##########

#SBATCH --time=04:00:00             # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --ntasks=1                 # number of tasks - how many tasks (nodes) that you require (same as -n)
#SBATCH --cpus-per-task=12          # number of CPUs (or cores) per task (same as -c)
#SBATCH --mem=32G                   # memory required per node - amount of memory (in bytes)
#SBATCH --job-name=qiime_import_deblur_<target>_<region>_<layout>        # you can give your job a name for easier identification (same as -J)
#SBATCH --output=%x-%j.SLURMout
#SBATCH --partition=scavenger

########## Command Lines to Run ##########

conda activate qiime2-2023.2

FP=/hpc/group/bio556l-s23/jal138/phyllosphere_evolution/data/SRA_files
QFP=/hpc/group/bio556l-s23/jal138/phyllosphere_evolution/data/Qiime2_files
mkdir -p "$QFP"/feature_table/
mkdir -p "$QFP"/exported_feature_table/


TARGET=<target>
REGION=<region>
LAYOUT=<layout>
i="$TARGET"_"$REGION"_"$LAYOUT"

if [[ $LAYOUT == "paired" ]]; then
  qiime tools import \
    --type 'SampleData[PairedEndSequencesWithQuality]' \
    --input-path $FP/"$TARGET"_"$REGION"_paired/ \
    --input-format CasavaOneEightSingleLanePerSampleDirFmt \
    --output-path "$QFP"/demux-paired-end-"$TARGET"_"$REGION".qza

  qiime deblur denoise-other \
    --i-demultiplexed-seqs "$QFP"/demux-paired-end-"$TARGET"_"$REGION".qza \
    --i-reference-seqs  "$FP"/../reference_data/Basidio_yeast_its1_58s_its2.qza \
    --p-trim-length 250 \
    --p-jobs-to-start 12 \
    --verbose \
    --o-stats "$QFP"/feature_table/deblur-stats_1_$i.qza \
    --o-representative-sequences "$QFP"/feature_table/rep-seqs_1_$i.qza \
    --o-table "$QFP"/feature_table/table_1_$i.qza

  # qiime dada2 denoise-paired \
  #   --i-demultiplexed-seqs "$QFP"/demux-paired-end-"$TARGET"_"$REGION".qza \
  #   --p-trunc-len-f 200 \
  #   --p-trunc-len-r 200 \
  #   --p-n-threads 24 \
  #   --verbose \
  #   --o-denoising-stats "$QFP"/feature_table/dada2-stats_1_$i.qza \
  #   --o-representative-sequences "$QFP"/feature_table/rep-seqs_1_$i.qza \
  #   --o-table "$QFP"/feature_table/table_1_$i.qza \
  #   --p-n-reads-learn 100000

elif [[ $LAYOUT == "single" ]]; then
  qiime tools import \
    --type 'SampleData[SequencesWithQuality]' \
    --input-path $FP/"$TARGET"_"$REGION"_single/ \
    --input-format CasavaOneEightSingleLanePerSampleDirFmt \
    --output-path "$QFP"/demux-single-end-"$TARGET"_"$REGION".qza

  qiime deblur denoise-other \
    --i-demultiplexed-seqs "$QFP"/demux-single-end-"$TARGET"_"$REGION".qza \
    --i-reference-seqs  "$FP"/../reference_data/Basidio_yeast_its1_58s_its2.qza \
    --p-trim-length 250 \
    --p-jobs-to-start 12 \
    --verbose \
    --o-stats "$QFP"/feature_table/deblur-stats_1_$i.qza \
    --o-representative-sequences "$QFP"/feature_table/rep-seqs_1_$i.qza \
    --o-table "$QFP"/feature_table/table_1_$i.qza

  # qiime dada2 denoise-single \
  #   --i-demultiplexed-seqs "$QFP"/demux-single-end-"$TARGET"_"$REGION".qza \
  #   --p-n-threads 24 \
  #   --p-trunc-len 0 \
  #   --verbose \
  #   --o-denoising-stats "$QFP"/feature_table/dada2-stats_1_$i.qza \
  #   --o-representative-sequences "$QFP"/feature_table/rep-seqs_1_$i.qza \
  #   --o-table "$QFP"/feature_table/table_1_$i.qza \
  #   --p-n-reads-learn 100000
fi
qiime tools export \
  --input-path "$QFP"/feature_table/rep-seqs_1_$i.qza \
  --output-path "$QFP"/exported_feature_table/rep-seqs_1_$i

qiime tools export \
  --input-path "$QFP"/feature_table/table_1_$i.qza \
  --output-path "$QFP"/exported_feature_table/table_1_$i

conda deactivate

scontrol show job $SLURM_JOB_ID     ### write job information to output file
